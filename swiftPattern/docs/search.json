{"Classes/FactoryItem2.html#/s:12swiftPattern12FactoryItem2C8setColoryyF":{"name":"setColor()","abstract":"<p>Real implement of object, will return red background</p>","parent_name":"FactoryItem2"},"Classes/FactoryItem1.html#/s:12swiftPattern12FactoryItem1C8setColoryyF":{"name":"setColor()","abstract":"<p>Real implement of object, will return black background</p>","parent_name":"FactoryItem1"},"Classes/FactoryItemBase.html#/s:12swiftPattern15FactoryItemBaseC8setColoryyF":{"name":"setColor()","abstract":"<p>Function of super Item, will return no-color background</p>","parent_name":"FactoryItemBase"},"Classes/Factory2.html#/s:12swiftPattern8Factory2C12createObjectAA15FactoryItemBaseCyF":{"name":"createObject()","abstract":"<p>To create a real instance of object</p>","parent_name":"Factory2"},"Classes/Factory1.html#/s:12swiftPattern8Factory1C12createObjectAA15FactoryItemBaseCyF":{"name":"createObject()","abstract":"<p>To create a real instance of object</p>","parent_name":"Factory1"},"Classes/CoreFactory.html#/s:12swiftPattern11CoreFactoryC12createObjectAA0D8ItemBaseCyF":{"name":"createObject()","abstract":"<p>Common Factory method for all of the factory</p>","parent_name":"CoreFactory"},"Classes/CoreFactory.html":{"name":"CoreFactory","abstract":"<p>An example of Factory method</p>"},"Classes/Factory1.html":{"name":"Factory1","abstract":"<p>An example of Factory method</p>"},"Classes/Factory2.html":{"name":"Factory2","abstract":"<p>An example of Factory method</p>"},"Classes/FactoryItemBase.html":{"name":"FactoryItemBase","abstract":"<p>An example of Factory method</p>"},"Classes/FactoryItem1.html":{"name":"FactoryItem1","abstract":"<p>An example of Factory method</p>"},"Classes/FactoryItem2.html":{"name":"FactoryItem2","abstract":"<p>An example of Factory method</p>"},"Classes/MultitonManager.html#/s:12swiftPattern15MultitonManagerC12sharedConfigypSSF":{"name":"sharedConfig(_:)","abstract":"<p>An example function of get multiton array</p>","parent_name":"MultitonManager"},"Classes/MultitonManager.html":{"name":"MultitonManager","abstract":"<p>An example of multiton object</p>"},"Classes/ConfigSingleton.html#/s:12swiftPattern15ConfigSingletonC14sharedInstanceACvZ":{"name":"sharedInstance","abstract":"<p>The static variable to hold my object</p>","parent_name":"ConfigSingleton"},"Classes/ConfigSingleton.html#/s:12swiftPattern15ConfigSingletonC12testAppColorSo7UIColorCyF":{"name":"testAppColor()","abstract":"<p>An example function of singleton, you can access it anywhere whithout using the new object, preventing no-needed object creation</p>","parent_name":"ConfigSingleton"},"Classes/ConfigSingleton.html":{"name":"ConfigSingleton","abstract":"<p>An example of singleton object</p>"},"Classes/LazyInitialization.html#/s:12swiftPattern18LazyInitializationC14lazyVarExampleSaySSGv":{"name":"lazyVarExample","abstract":"<p>An example to create an lazy var</p>","parent_name":"LazyInitialization"},"Classes/LazyInitialization.html":{"name":"LazyInitialization","abstract":"<p>An example of lazy initializtion object</p>"},"Creational Patterns - LazyInitialization.html":{"name":"Creational Patterns - LazyInitialization"},"Creational Patterns - Singleton.html":{"name":"Creational Patterns - Singleton"},"Creational Patterns - Multiton.html":{"name":"Creational Patterns - Multiton"},"Creational Patterns - Factory Method.html":{"name":"Creational Patterns - Factory Method"}}